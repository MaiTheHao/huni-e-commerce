@use './reset.scss';
@use 'vars' as *;
@use 'sass:color';

// Custom scrollbar styles
* {
	scrollbar-width: thin;
	scrollbar-color: $gray-400 $gray-100;
	line-height: 1.5;
}

*::-webkit-scrollbar {
	width: 8px;
	height: 8px;
	background: $gray-100;
}

*::-webkit-scrollbar-thumb {
	background: $gray-400;
	border-radius: 8px;
}

*::-webkit-scrollbar-thumb:hover {
	background: $gray-500;
}

*::-webkit-scrollbar-corner {
	background: $gray-100;
}

.app-container {
	position: relative;
	width: 100vw;
	height: max-content;
	display: flex;
	flex-direction: column;
	align-items: center;

	.app-block {
		position: relative;
		width: 100%;
		max-width: 1200px;
		height: max-content;
	}

	.app-body {
		min-height: 40vh;
	}

	&:has(.app-body) {
		padding: $app-body-padding-y-mobile $app-body-padding-x-mobile;

		@media screen and (min-width: $breakpoint-md) {
			padding: $app-body-padding-y-tablet $app-body-padding-x-tablet;
		}

		@media screen and (min-width: $breakpoint-xl) {
			padding: $app-body-padding-y-desktop $app-body-padding-x-desktop;
		}
	}
}

$link-underline-height: 2px !default;
$link-underline-offset: -0.5ch !default;

.link-underline {
	position: relative;
	cursor: pointer;

	&::after {
		content: '';
		position: absolute;
		left: 0;
		bottom: $link-underline-offset;
		width: 0;
		height: $link-underline-height;
		transition: width 0.2s ease;
	}

	&.link-underline--active,
	&:active {
		&::after {
			width: 100%;
		}
	}

	&:hover::after {
		width: 100%;
	}
}

.animated-tilt-scale {
	transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);

	&:hover {
		transform: scale(1.15) rotate(10deg);
	}

	&:active {
		transform: scale(0.95) rotate(0deg);
	}
}

// CTA button styles
.cta-button,
.cta-button--outlined {
	cursor: pointer;
	padding: 0.5em 1.5em;
	border-radius: 0.25em;
	font-weight: $font-weight-semibold;
	font-size: $font-size-16;
	text-align: center;
	text-wrap: nowrap;
	transition: background 0.2s, color 0.2s, border-color 0.2s, transform 0.15s;
}

.cta-button {
	background-color: $primary-color;
	color: $txt-white;

	&.disabled {
		color: $gray-300;
		cursor: not-allowed;
		box-shadow: none;
		opacity: 0.75;
		pointer-events: none;
	}

	&:hover:not(.disabled):not(:disabled) {
		background-color: color.adjust($primary-color, $lightness: -5%);
	}

	&:active:not(.disabled):not(:disabled) {
		background-color: color.adjust($primary-color, $lightness: -10%);
		transform: scale(0.97);
	}
}

.cta-button--outlined {
	background-color: transparent;
	color: $primary-color;
	box-shadow: inset 0 0 0 2px $primary-color;

	&.disabled {
		background-color: transparent;
		color: $gray-300;
		box-shadow: inset 0 0 0 2px $gray-300;
		cursor: not-allowed;
		opacity: 0.75;
		pointer-events: none;
	}

	&:hover:not(.disabled):not(:disabled) {
		background-color: rgba($primary-color, 0.08);
		color: $primary-color;
	}

	&:active:not(.disabled):not(:disabled) {
		transform: scale(0.97);
	}
}

// SweetAlert custom styles
.swal2-popup {
	font-family: inherit;
	.swal2-title {
		color: $primary-color;
		font-weight: $font-weight-semibold;
	}

	.swal2-html-container {
		color: $txt-secondary;
	}

	.swal2-actions {
		.swal2-confirm {
			@extend .cta-button;
		}
	}

	&:has(.swal2-error) {
		.swal2-title {
			color: $error-color;
		}

		.swal2-actions {
			.swal2-confirm {
				@extend .cta-button;
				background-color: $error-color;
			}
		}
	}
}

// Global styles for text
.info {
	font-size: $font-size-14;
	color: $txt-secondary;
}

// Spin
.spinner {
	display: inline-block;
	width: 2.5rem;
	aspect-ratio: 1;
	border-radius: 50%;
	border: 3px solid rgba($primary-color, 0.15);
	border-top: 3px solid $primary-color;
	animation: spin 0.7s linear infinite;
	box-shadow: 0 2px 8px rgba($primary-color, 0.08);

	// Optional: visually hide text for accessibility
	&::after {
		content: '';
		display: block;
		width: 100%;
		height: 100%;
	}

	// Optional: center an icon inside spinner
	svg {
		position: absolute;
		inset: 0;
		margin: auto;
		width: 1.5rem;
		height: 1.5rem;
		color: $primary-color;
		pointer-events: none;
	}
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

// line
.line {
	position: relative;
	width: 100%;
	height: 2px;
	border-radius: 2px;
	background-color: $accent-color;

	&::before {
		content: '';
		position: absolute;
		top: 50%;
		left: 0;
		width: 100%;
		height: 1px;
		background-color: $primary-color;
		transform: translateY(-50%);
	}
}

// auto generated markdown styles
.markdown {
	h1 {
		font-size: 2em;
		font-weight: $font-weight-bold;
		color: $accent-color;
	}
	h2 {
		font-size: 1.75em;
		font-weight: $font-weight-semibold;
		color: $accent-color;
	}
	h3 {
		font-size: 1.5em;
		font-weight: $font-weight-semibold;
		color: $accent-color;
	}
	h4 {
		font-size: 1.25em;
		font-weight: $font-weight-semibold;
		color: $accent-color;
	}
	h5 {
		font-size: 1.125em;
		font-weight: $font-weight-semibold;
		color: $accent-color;
	}
	h6 {
		font-size: 1em;
		font-weight: $font-weight-semibold;
		color: $accent-color;
	}

	p {
		font-size: 1em;
		color: $txt-secondary;
		line-height: 1.6;
		margin-bottom: 1em;
	}

	ul,
	ol {
		color: $txt-secondary;
		padding-left: 1.5em;
		margin-bottom: 1em;

		li {
			margin-bottom: 0.5em;
			line-height: 1.6;
		}
	}

	ul {
		list-style-type: disc;
	}

	ol {
		list-style-type: decimal;
	}

	strong {
		color: $accent-color;
		font-weight: $font-weight-bold;
	}

	em {
		font-style: italic;
	}

	blockquote {
		border-left: 4px solid $accent-color;
		padding-left: 1em;
		color: $txt-secondary;
		margin: 1em 0;
		font-style: italic;
		background: color.adjust($accent-color, $alpha: -0.9);
	}

	code,
	pre {
		background: $gray-100;
		color: $primary-color;
		border-radius: 4px;
		padding: 0.2em 0.4em;
		font-size: 0.95em;
	}

	pre {
		padding: 1em;
		overflow-x: auto;
	}

	a {
		color: $primary-color;
		text-decoration: underline;
		transition: color 0.2s;
		&:hover {
			color: color.adjust($primary-color, $lightness: -10%);
		}
	}

	hr {
		border: none;
		border-top: 1px solid $gray-300;
		margin: 2em 0;
	}

	* {
		position: relative;
		max-width: 100%;
		box-sizing: border-box;
	}

	img {
		width: 100%;
		max-width: 100%;
		margin-top: 2ch;
		border-radius: 6px;
		box-shadow: 0 2px 8px rgba($primary-color, 0.08);
	}
}
