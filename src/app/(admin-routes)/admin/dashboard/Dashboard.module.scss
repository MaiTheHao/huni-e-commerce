@use '../../../vars' as *;
@use 'sass:map';

.container {
	width: 100%;
}

.block {
	display: flex;
	flex-direction: column;
	gap: 1em;
}

.cards {
	display: flex;
	align-items: center;
	max-width: 100%;
	gap: 1em;
	.card {
		flex: 1 1 10em;
		min-width: max-content;
		display: flex;
		flex-direction: column;
		align-items: center;
		padding: 1em;
		border-radius: 0.25em;
		background-color: $white;
		gap: 1em;

		svg {
			aspect-ratio: 1;
			font-size: 1.25em;
			border: 2px solid $white;
			background-color: $black-700;
			color: $white;
			padding: 0.5em;
			border-radius: 50%;
		}

		.cardContent {
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 0.5em;
			width: 100%;
		}

		.cardValue {
			font-weight: $font-weight-bold;
			color: $txt-primary;
			font-size: 1em;
			line-height: 1;
		}

		.cardLabel {
			text-transform: capitalize;
			font-size: 1em;
			line-height: 1;
		}

		@mixin card-color($color-map) {
			svg {
				background-color: map.get($color-map, icon);
				box-shadow: 0 0 5em 1em rgba(map.get($color-map, bg), 1);
			}

			.cardLabel {
				color: map.get($color-map, icon);
			}
		}

		&--green {
			@include card-color($success);
		}

		&--blue {
			@include card-color($info);
		}

		&--orange {
			@include card-color($warning);
		}

		&--red {
			@include card-color($error);
		}

		&--highlight {
			@include card-color($error);
			box-shadow: 0 0 0 1px inset rgba(map.get($error, bg), 1);

			svg {
				border-color: map.get($error, border);
			}

			.cardLabel {
				color: map.get($error, text);
			}

			.cardValue {
				color: map.get($error, icon);
				font-size: 1.15em;
			}
		}
	}
}

.part {
	width: 100%;
	background-color: $white;
	box-shadow: $box-shadow-card;
	padding: 1em;
	border-radius: 0.25em;

	&-title {
		font-size: 1em;
		font-weight: $font-weight-semibold;
		color: $accent-color;
		margin-bottom: 1em;
	}
}

.table {
	width: 100%;
	border-collapse: collapse;
	background-color: $white;
	border-radius: 0.25em;
	box-shadow: $box-shadow-xs;
	overflow: hidden;

	thead {
		background-color: $gray-200;
		tr {
			th {
				padding: 0.875em 1em;
				text-align: left;
				font-weight: $font-weight-semibold;
				color: $txt-primary;
				border-bottom: 2px solid $black-200;
				font-size: 0.875em;
				border-right: 1px solid $black-200;

				&:last-child {
					border-right: none;
				}
			}
		}
	}

	tbody {
		tr {
			border-bottom: 1px solid $black-200;
			&:nth-child(even) {
				background-color: $gray-100;
			}
			td {
				color: $txt-secondary;
				padding: 0.875em 1em;
				font-size: 0.875em;
				border-right: 1px solid $black-200;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;

				&:last-child {
					border-right: none;
				}
			}
		}
	}
}

.table__td--empty {
	color: $txt-tertiary !important;
	font-style: italic;
}

.orders-table__body__id,
.customers-table__body__email {
	width: 25ch;
	&__wrapper {
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 1ch;
	}

	&__value {
		max-width: 20ch;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		display: inline-block;
	}
}
